@using Telerik_ForumTeamProject.Models.ResponseDTO
@using Telerik_ForumTeamProject.Models.ViewModels
@model Telerik_ForumTeamProject.Models.ViewModels.PostViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Post Details";
    Layout = "_Layout";
    var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
    var isAdmin = bool.Parse(User.FindFirst("isAdmin")?.Value ?? "false");
}

<div class="container mx-auto p-6 mt-6 bg-gray-700 shadow-md rounded-lg">

    <div class="bg-gray-800 p-6 rounded-lg shadow-md relative">
        <div class="flex justify-between items-start">
            <div>
                <h2 class="text-3xl font-bold text-white mb-4">@Model.Title</h2>
                <p class="text-gray-300 mb-4">@Model.Content</p>
                <p class="text-gray-500 mb-4">Posted on: @Model.PostDate</p>
                <p class="text-gray-500 mb-4">Likes: @Model.Likes</p>
                <p class="text-gray-500 mb-4">Creator: @Model.UserName</p>
                <p class="text-gray-500 mb-4">Tags: @string.Join(", ", Model.Tags)</p>
            </div>

            @if (Model.UserName == currentUserId || isAdmin)
            {
                <div>
                    <button class="text-white px-2 py-1 hover:bg-gray-700 rounded-lg" onclick="togglePostMenu()">
                        <i class="fa fa-ellipsis-h"></i>
                    </button>
                    <div id="postMenu" class="hidden bg-gray-800 text-white rounded-lg shadow-lg mt-2">
                        <a href="@Url.Action("Edit", "Post", new { id = Model.id })" class="block px-4 py-2">Edit</a>
                        <form id="deletePostForm" method="post" asp-action="Delete" asp-controller="Post" onsubmit="return deletePost(event);">
                            <input type="hidden" name="postId" value="@Model.id" />
                            <button type="submit" class="block px-4 py-2 text-left w-full">Delete</button>
                        </form>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="mt-6">
        @if (TempData["ReplyError"] != null)
        {
            <div class="bg-red-500 text-white p-4 rounded mb-4">
                <p>@TempData["ReplyError"]</p>
            </div>
        }

        @if (TempData["ReplySuccess"] != null)
        {
            <div class="bg-green-500 text-white p-4 rounded mb-4">
                <p>@TempData["ReplySuccess"]</p>
            </div>

        }
        <h3 class="text-2xl font-bold text-white mb-4">Comments:</h3>
        @foreach (var comment in Model.Comments)
        {

            <div class="bg-gray-800 p-4 mb-4 rounded-lg shadow-md relative">
                <p class="text-gray-300">@comment.Content</p>
                <p class="text-gray-500 mb-4">By: @comment.UserName on @comment.Created</p>

                @if (comment.UserName == currentUserId || isAdmin)
                {
                    <div class="absolute top-0 right-0">
                        <button class="text-white px-2 py-1 hover:bg-gray-700 rounded-lg" onclick="toggleMenu(@comment.Id)">
                            <i class="fa fa-ellipsis-h"></i>
                        </button>
                        <div id="menu-@comment.Id" class="hidden bg-gray-800 text-white rounded-lg shadow-lg">
                            <a href="@Url.Action("EditComment", "Comment", new { id = comment.Id })" class="block px-4 py-2">Edit</a>
                            <form method="post" asp-action="DeleteComment" asp-controller="Comment" onsubmit="return confirm('Are you sure you want to delete this comment?');">
                                <input type="hidden" name="commentId" value="@comment.Id" />
                                <button type="submit" class="block px-4 py-2 text-left w-full">Delete</button>
                            </form>
                        </div>
                    </div>
                }
                <!-- Reply Button and Form -->
                <div class="mt-4">
                    <button class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-700 transition duration-300" onclick="toggleReplyForm(@comment.Id)">
                        Reply
                    </button>
                    <div id="reply-form-@comment.Id" class="hidden mt-2">
                        <form method="post" asp-controller="Post" asp-action="AddReply">
                            <input type="hidden" name="parentCommentId" value="@comment.Id" />
                            <textarea name="Content" class="form-control bg-gray-800 text-white p-2 rounded-lg w-full" rows="3" placeholder="Write your reply..."></textarea>
                            <div class="mt-2">
                                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-700 transition duration-300">Submit</button>
                                <button type="button" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-700 transition duration-300 ml-2" onclick="cancelReplyForm(@comment.Id)">Cancel</button>
                            </div>
                        </form>
                    </div>
                </div>

                @if (comment.RepliesCount > 0)
                {
                    <form method="get" asp-controller="Post" asp-action="GetReplies" id="show-replies-form-@comment.Id">
                        <input type="hidden" name="commentId" value="@comment.Id" />
                        <button type="submit" class="bg-green-500 text-white px-2 py-1 rounded hover:bg-green-700 transition duration-300 mt-2 w-32" id="show-replies-btn-@comment.Id">
                            Show replies
                        </button>
                    </form>
                }

                <div id="replies-@comment.Id" class="ml-6 hidden">
                    @if (comment.Replies != null && comment.Replies.Any())
                    {
                        <h3 class="text-xl font-bold text-white mb-4">Replies:</h3>
                        @foreach (var reply in comment.Replies)
                        {
                            <div class="bg-gray-700 p-4 mb-4 rounded-lg shadow-md">
                                <p class="text-gray-300">@reply.Content</p>
                                <p class="text-gray-500 mb-4">By: @reply.UserName on @reply.Created</p>
                            </div>
                        }
                    }
                </div>
            </div>
        }

        <h3 class="text-2xl font-bold text-white mt-6 mb-4">Add a Comment:</h3>
        <form method="post" asp-controller="Post" asp-action="AddComment" class="mb-6">
            <input type="hidden" name="postId" value="@Model.id" />
            <textarea name="Content" class="form-control bg-gray-800 text-white p-2 rounded-lg w-full" rows="4" placeholder="Write your comment..."></textarea>
            <button type="submit" class="bg-green-500 text-white px-4 py-2 mt-2 rounded hover:bg-green-700 transition duration-300">Submit</button>
        </form>
    </div>
</div>

<script>
    function toggleMenu(commentId) {
        var menu = document.getElementById('menu-' + commentId);
        menu.classList.toggle('hidden');
    }

    function togglePostMenu() {
        var menu = document.getElementById('postMenu');
        menu.classList.toggle('hidden');
    }

    function deletePost(event) {
        event.preventDefault();
        if (confirm('Are you sure you want to delete this post?')) {
            var form = document.getElementById('deletePostForm');
            var postId = form.querySelector('input[name="postId"]').value;

            fetch(`/Post/Delete/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = '/Post/Index';
                    } else {
                        alert('Failed to delete post.');
                    }
                })
                .catch(error => console.error('Error:', error));
        }
    }

    function toggleReplyForm(commentId) {
        var replyForm = document.getElementById('reply-form-' + commentId);
        var showRepliesButton = document.getElementById('show-replies-btn-' + commentId);
        replyForm.classList.toggle('hidden');
        if (!replyForm.classList.contains('hidden')) {
            showRepliesButton.classList.add('hidden');
        } else {
            showRepliesButton.classList.remove('hidden');
        }
    }

    function cancelReplyForm(commentId) {
        var replyForm = document.getElementById('reply-form-' + commentId);
        var showRepliesButton = document.getElementById('show-replies-btn-' + commentId);
        replyForm.classList.add('hidden');
        showRepliesButton.classList.remove('hidden');
    }


</script>
