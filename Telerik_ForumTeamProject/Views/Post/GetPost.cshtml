@using Telerik_ForumTeamProject.Models.ResponseDTO
@using Telerik_ForumTeamProject.Models.ViewModels
@model Telerik_ForumTeamProject.Models.ViewModels.PostViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Post Details";
    Layout = "_Layout";
}

<div class="container mx-auto p-6 mt-6 bg-gray-700 shadow-md rounded-lg">
    <div class="bg-gray-800 p-6 rounded-lg shadow-md">
        <h2 class="text-3xl font-bold text-white mb-4">@Model.Title</h2>
        <p class="text-gray-300 mb-4">@Model.Content</p>
        <p class="text-gray-500 mb-4">Posted on: @Model.PostDate</p>
        <p class="text-gray-500 mb-4">Likes: @Model.Likes</p>
        <p class="text-gray-500 mb-4">Creator: @Model.UserName</p>
        <p class="text-gray-500 mb-4">Tags: @string.Join(", ", Model.Tags)</p>
    </div>

    <div class="mt-6">
        <h3 class="text-2xl font-bold text-white mb-4">Comments:</h3>
        @foreach (var comment in Model.Comments)
        {
            <div class="bg-gray-800 p-4 mb-4 rounded-lg shadow-md">
                <p class="text-gray-300">@comment.Content</p>
                <p class="text-gray-500 mb-4">By: @comment.UserName on @comment.Created</p>
                <form method="get" asp-controller="Post" asp-action="GetReplies">
                    <input type="hidden" name="commentId" value="@comment.Id" />
                    <button type="submit" class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-700 transition duration-300">Show replies</button>
                </form>
            </div>

            <div id="replies-@comment.Id" class="ml-6">
                @if (Model.Replies != null && Model.Replies.Any())
                {
                    <h3 class="text-xl font-bold text-white mb-4">Replies:</h3>
                    <partial name="_RepliesPartial" model="new Telerik_ForumTeamProject.Models.ViewModels.PagedRepliesViewModel
                        {
                            Replies = Model.Replies.Select(reply => new RepliesViewModel
                            {
                                Content = reply.Content,
                                UserName = reply.UserName,
                                Created = reply.Created
                            }).ToList(),
                            Metadata = new PaginationMetadata
                            {
                                TotalCount = Model.Replies.Count,
                                PageSize = 10,
                                CurrentPage = 1,
                                TotalPages = (int)Math.Ceiling((double)Model.Replies.Count / 10)
                            }
                        }" />
                }
            </div>
        }
    </div>
</div>
