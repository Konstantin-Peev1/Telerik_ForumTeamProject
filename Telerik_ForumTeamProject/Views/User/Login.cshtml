@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model Telerik_ForumTeamProject.Models.RequestDTO.LogInRequestDTO

@{
    ViewData["Title"] = "Login";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Sports Chat App</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body class="bg-gray-900 text-gray-100 flex items-center justify-center h-screen">
    <div class="bg-gray-800 p-6 rounded-lg shadow-md w-full max-w-md">
        <h2 class="text-3xl font-bold text-center text-green-500 mb-4">Login</h2>

        <form id="loginForm" method="post" class="space-y-4">
            @Html.AntiForgeryToken()
            <div class="form-group">
                <label asp-for="UserName" class="block text-gray-300"></label>
                <input asp-for="UserName" class="form-control w-full p-3 rounded bg-gray-700 border border-gray-600 text-gray-300 placeholder-gray-500" />
                <span asp-validation-for="UserName" class="text-red-500"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="block text-gray-300"></label>
                <input asp-for="Password" type="password" class="form-control w-full p-3 rounded bg-gray-700 border border-gray-600 text-gray-300 placeholder-gray-500" />
                <span asp-validation-for="Password" class="text-red-500"></span>
            </div>
            <button type="submit" class="bg-green-500 text-white p-3 rounded w-full hover:bg-green-700 transition duration-300">Login</button>
        </form>
    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }

        <script>
            document.getElementById('loginForm').addEventListener('submit', function (event) {
                event.preventDefault();
                const formData = new FormData(this);

                fetch('@Url.Action("Login", "User")', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.token) {
                            localStorage.setItem('AuthToken', data.token);
                            localStorage.setItem('SessionId', data.sessionId);
                            localStorage.setItem('UserId', data.userId);
                            window.location.href = '@Url.Action("Index", "Dashboard")';
                        } else {
                            alert('Login failed. Please check your credentials and try again.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while logging in. Please try again.');
                    });
            });
        </script>
    }
</body>
</html>
